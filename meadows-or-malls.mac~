/* meadows-or-malls.mac
 * maxima script for linear programming
 * Ash Mathematics, Summer 2019
 * maxima -b meadows-or-malls.mac > meadows-or-malls.macout &
 */

kill(C);       /* Cost function (minimand) */
kill(GR, GD, AR, AD, MR, MD);      /* Choice variables */
kill(eq_i, eq_ii, eq_iii, eq_ge_iv, ineq_ge_iv, eq_le_v, ineq_le_v, eq_vi, nn_vii, nn_viii, nn_ix, nn_x, nn_xi, nn_xii);   /* Constraints */
kill(candidate) ;


C : 50*GR + 500*GD + 200*AR + 2000*AD + 100*MR + 1000*MD ;

eq_i: GR + GD = 300 ;
eq_ii: AR + AD = 100 ;
eq_iii: MR + MD = 150 ;
eq_ge_iv: GD + AD + MD = 300 ;
ineq_ge_iv: GD + AD + MD >= 300 ;
eq_le_v: AR + MR = 200 ;
ineq_le_v: AR + MR <= 200 ;
eq_vi: AR + GD = 100 ;
nn_vii: GR = 0 ;
nn_viii: AR = 0 ;
nn_ix: MR = 0 ;
nn_x: GD = 0 ;
nn_xi: AD = 0 ;
nn_xii: MD = 0 ;

X : [GR, GD, AR, AD, MR, MD] ;

linsolve([eq_i, eq_ii, eq_iii, eq_vi, eq_ge_iv, nn_ix], X ) ;
candidate : % ;
subst(candidate, C);
iv: subst(candidate, ineq_ge_iv) ;
is(iv) ;
v: subst(candidate, ineq_le_v) ;
is(v) ;

linsolve([eq_i, eq_ii, eq_iii, eq_vi, eq_ge_iv, nn_xii], X ) ;
candidate : % ;
subst(candidate, C);
iv: subst(candidate, ineq_ge_iv) ;
is(iv) ;
v: subst(candidate, ineq_le_v) ;
is(v) ;

linsolve([eq_i, eq_ii, eq_iii, eq_vi, nn_viii, nn_xii], X ) ;
candidate : % ;
subst(candidate, C);
iv: subst(candidate, ineq_ge_iv) ;
is(iv) ;
v: subst(candidate, ineq_le_v) ;
is(v) ;

linsolve([eq_i, eq_ii, eq_iii, eq_vi, nn_viii, nn_ix], X ) ;
candidate : % ;
subst(candidate, C);
iv: subst(candidate, ineq_ge_iv) ;
is(iv) ;
v: subst(candidate, ineq_le_v) ;
is(v) ;

linsolve([eq_i, eq_ii, eq_iii, eq_vi, nn_ix, nn_x], X ) ;
candidate : % ;
subst(candidate, C);
iv: subst(candidate, ineq_ge_iv) ;
is(iv) ;
v: subst(candidate, ineq_le_v) ;
is(v) ;

linsolve([eq_i, eq_ii, eq_iii, eq_vi, nn_ix, nn_xi], X ) ;
candidate : % ;
subst(candidate, C);
iv: subst(candidate, ineq_ge_iv) ;
is(iv) ;
v: subst(candidate, ineq_le_v) ;
is(v) ;

linsolve([eq_i, eq_ii, eq_iii, eq_vi, nn_x, nn_xii], X ) ;
candidate : % ;
subst(candidate, C);
iv: subst(candidate, ineq_ge_iv) ;
is(iv) ;
v: subst(candidate, ineq_le_v) ;
is(v) ;

linsolve([eq_i, eq_ii, eq_iii, eq_vi, nn_xi, nn_xii], X ) ;
candidate : % ;
subst(candidate, C);
iv: subst(candidate, ineq_ge_iv) ;
is(iv) ;
v: subst(candidate, ineq_le_v) ;
is(v) ;

linsolve([eq_i, eq_ii, eq_iii, eq_vi, nn_x, nn_xi], X ) ;
candidate : % ;
subst(candidate, C);
iv: subst(candidate, ineq_ge_iv) ;
is(iv) ;
v: subst(candidate, ineq_le_v) ;
is(v) ;


/* Use built-in functions */

load(simplex);

minimize_lp(C, [eq_i,eq_ii,eq_iii,ineq_ge_iv,ineq_le_v, eq_vi]), nonegative_lp=true ;



A: matrix(
[1,1,0,0,0,0],
[0,0,1,1,0,0],
[0,0,0,0,1,1],
/* [0,1,0,1,0,1], */
[0,0,1,0,1,0],
[0,1,1,0,0,0] ) ;

b: [ 300, 100, 150, /* 300, */ 200, 100 ] ;
c:  [ 50, 500, 200, 2000, 100, 1000 ] ;

linear_program(A, b, c) ;



A: matrix(
[1,1,0,0,0,0],
[0,0,1,1,0,0],
[0,0,0,0,1,1],
[0,1,0,1,0,1], 
/* [0,0,1,0,1,0], */
[0,1,1,0,0,0] ) ;

b: [ 300, 100, 150, 300, /* 200, */  100 ] ;
c:  [ 50, 500, 200, 2000, 100, 1000 ] ;

linear_program(A, b, c) ;
